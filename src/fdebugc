#!/usr/bin/env node

const program = require('commander');
// Require logic.js file and extract controller functions using JS destructuring assignment
const { addSetup, setDefaultProject } = require('./logic');
const { makeSetup, debug, start } = require('./firebase')

program
  .version('0.0.1')
  .description('Firebase debugger CLI helper - MUST have firebase-tools and @google-cloud/functions-emulator');

program
  .command('debug <function>')
  .alias('d')
  .description('Debug a function')
  .action(functionName => {
    debug(functionName)
  });

program
  .command('config <project>')
  .alias('c')
  .description('Setup your firebase config')
  .action(async (options) => {
    addSetup(options.project, await makeSetup())
  });

program
  .command('set <project>')
  .alias('s')
  .description('Set a default project')
  .action((project) => {
    setDefaultProject(project)
  });

program
  .command('start')
  .description('Start functions emulator')
  .action(() => start());

// Assert that a VALID command is provided 
function isValid(commands) {
  const validCommand = [
    'debug',
    'config',
    'set',
    'start',
    'd',
    's',
    'c',
  ]
  return commands.length && validCommand.includes(commands[0])
}
if (!isValid(process.argv.slice(2))) {
  program.outputHelp();
  process.exit();
}
program.parse(process.argv);